name: Deploy to Development (Simple)

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-simple-dev.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Build and export Next.js application
      working-directory: frontend
      run: |
        # Build the application
        npm run build
        
        # Create a simple index.html for testing
        mkdir -p out
        cat > out/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>WordPress + Next.js Starter</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; margin: 40px; }
                .container { max-width: 800px; margin: 0 auto; }
                .success { color: #10b981; }
                .info { background: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üöÄ WordPress + Next.js Starter</h1>
                <p class="success">‚úÖ Deployment successful!</p>
                
                <div class="info">
                    <h3>Development Environment</h3>
                    <p><strong>Build:</strong> ${{ github.sha }}</p>
                    <p><strong>Branch:</strong> ${{ github.ref_name }}</p>
                    <p><strong>Deployed:</strong> $(date)</p>
                </div>
                
                <h2>Next Steps</h2>
                <ul>
                    <li>Deploy WordPress backend</li>
                    <li>Configure headless WordPress setup</li>
                    <li>Connect frontend to WordPress GraphQL API</li>
                    <li>Set up production environment</li>
                </ul>
            </div>
        </body>
        </html>
        EOF
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Storage
      working-directory: frontend
      run: |
        echo "Deploying to storage account: ${{ secrets.DEV_STORAGE_ACCOUNT }}"
        
        # Deploy all files from out directory
        az storage blob upload-batch \
          --account-name "${{ secrets.DEV_STORAGE_ACCOUNT }}" \
          --destination '$web' \
          --source out \
          --overwrite \
          --auth-mode login
    
    - name: Validate deployment
      run: |
        SITE_URL="https://${{ secrets.DEV_DOMAIN_NAME }}"
        
        echo "Testing site accessibility: $SITE_URL"
        
        # Wait for propagation
        sleep 15
        
        # Test site accessibility
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL" || echo "000")
        
        if [ "$HTTP_STATUS" = "200" ]; then
          echo "‚úÖ Site is accessible (HTTP $HTTP_STATUS)"
        else
          echo "‚ö†Ô∏è Site returned HTTP $HTTP_STATUS"
        fi
    
    - name: Deployment summary
      if: success()
      run: |
        echo "üöÄ Development deployment completed successfully!"
        echo "Site URL: https://${{ secrets.DEV_DOMAIN_NAME }}"
        echo "Storage Account: ${{ secrets.DEV_STORAGE_ACCOUNT }}"
        echo "Resource Group: ${{ secrets.DEV_RESOURCE_GROUP }}"
        echo "Build: ${{ github.sha }}"